'use strict';

const CONTENT_TYPE = 'text/plain; version=0.0.4; charset=utf-8';

function metricsPlugin(fastify, opts = {}, done) {
  const endpoint = typeof opts.endpoint === 'string' ? opts.endpoint : '/metrics';
  const state = {
    totalRequests: 0,
  };

  fastify.addHook('onRequest', (_request, _reply, hookDone) => {
    state.totalRequests += 1;
    hookDone();
  });

  fastify.get(endpoint, async (_request, reply) => {
    reply.header('content-type', CONTENT_TYPE);
    const lines = [
      '# HELP nodejs_process_uptime_seconds Node.js process uptime in seconds.',
      '# TYPE nodejs_process_uptime_seconds gauge',
      `nodejs_process_uptime_seconds ${process.uptime()}`,
      '# HELP fastify_requests_total Total number of requests received.',
      '# TYPE fastify_requests_total counter',
      `fastify_requests_total ${state.totalRequests}`,
    ];
    return lines.join('\n');
  });

  done();
}

module.exports = metricsPlugin;
module.exports.default = metricsPlugin;
