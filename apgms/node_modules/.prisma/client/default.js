class PrismaClient {
  constructor() {
    this.user = createModelStub("User");
    this.org = createModelStub("Org");
    this.bankLine = createModelStub("BankLine");
    this.policy = createModelStub("Policy");
    this.gate = createModelStub("Gate");
    this.ledgerEntry = createModelStub("LedgerEntry");
    this.rptToken = createModelStub("RptToken");
    this.auditBlob = createModelStub("AuditBlob");
    this.$transaction = async () => {
      throw new Error("PrismaClient stub transaction");
    };
  }
  $disconnect() {
    return Promise.resolve();
  }
}

function createModelStub(name) {
  return {
    findUnique: async () => {
      throw new Error(`${name}.findUnique not implemented in stub`);
    },
    findFirst: async () => {
      throw new Error(`${name}.findFirst not implemented in stub`);
    },
    create: async () => {
      throw new Error(`${name}.create not implemented in stub`);
    },
    createMany: async () => {
      throw new Error(`${name}.createMany not implemented in stub`);
    },
    upsert: async () => {
      throw new Error(`${name}.upsert not implemented in stub`);
    },
    findMany: async () => {
      throw new Error(`${name}.findMany not implemented in stub`);
    },
  };
}

module.exports = { PrismaClient };
