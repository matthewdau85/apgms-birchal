services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: apgms
      POSTGRES_PASSWORD: apgms
      POSTGRES_DB: apgms
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  api-gateway:
    image: node:20-alpine
    working_dir: /workspace/apgms
    command: >-
      sh -c "corepack enable && pnpm --filter @apgms/api-gateway dev"
    environment:
      NODE_ENV: development
      PORT: 3000
      SERVICE_NAME: api-gateway
      DATABASE_URL: postgresql://apgms:apgms@postgres:5432/apgms?schema=public
      REDIS_URL: redis://redis:6379
      LOG_LEVEL: info
      LOG_PRETTY: "true"
    ports:
      - "3000:3000"
    volumes:
      - ./:/workspace/apgms
      - pnpm-store:/root/.local/share/pnpm/store
    depends_on:
      - postgres
      - redis

  worker:
    image: node:20-alpine
    working_dir: /workspace/apgms
    command: >-
      sh -c "corepack enable && pnpm --filter @apgms/worker dev"
    environment:
      NODE_ENV: development
      SERVICE_NAME: worker
      DATABASE_URL: postgresql://apgms:apgms@postgres:5432/apgms?schema=public
      REDIS_URL: redis://redis:6379
      METRICS_PORT: 9100
      LOG_LEVEL: info
      LOG_PRETTY: "true"
      WORKER_QUEUE: default
    ports:
      - "9100:9100"
    volumes:
      - ./:/workspace/apgms
      - pnpm-store:/root/.local/share/pnpm/store
    depends_on:
      - postgres
      - redis

  tax-engine:
    image: python:3.11-slim
    working_dir: /workspace/apgms/services/tax-engine
    command: >-
      sh -c "pip install --no-cache-dir poetry && poetry config virtualenvs.create false && poetry install --only main && uvicorn app.main:app --host 0.0.0.0 --port 8000"
    environment:
      SERVICE_NAME: tax-engine
      LOG_LEVEL: info
      PORT: 8000
    ports:
      - "8000:8000"
    volumes:
      - ./:/workspace/apgms
    depends_on:
      - postgres

  prometheus:
    image: prom/prometheus:v2.54.1
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./infra/observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - api-gateway
      - worker
      - tax-engine

  loki:
    image: grafana/loki:2.9.8
    command: -config.file=/etc/loki/config.yml
    volumes:
      - ./infra/observability/loki/config.yml:/etc/loki/config.yml:ro
      - loki-data:/loki
    ports:
      - "3100:3100"

  promtail:
    image: grafana/promtail:2.9.8
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./infra/observability/promtail/config.yml:/etc/promtail/config.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:11.0.0
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
    volumes:
      - ./infra/observability/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./infra/observability/grafana/dashboards:/var/lib/grafana/dashboards:ro
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
      - loki

volumes:
  postgres-data:
  pnpm-store:
  loki-data:
