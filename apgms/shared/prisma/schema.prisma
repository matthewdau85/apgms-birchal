generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Org {
  id        String      @id @default(cuid())
  name      String
  createdAt DateTime    @default(now())
  deletedAt DateTime?
  users     User[]
  lines     BankLine[]
  reports   Rpt[]
  audits    AuditEvent[]
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  deletedAt DateTime?
  org       Org      @relation(fields: [orgId], references: [id], onDelete: Cascade)
  orgId     String
}

model BankLine {
  id        String   @id @default(cuid())
  org       Org      @relation(fields: [orgId], references: [id], onDelete: Cascade)
  orgId     String
  date      DateTime
  amount    Decimal
  payee     String
  desc      String
  createdAt DateTime @default(now())
  deletedAt DateTime?
}

model Rpt {
  id          String   @id @default(cuid())
  org         Org      @relation(fields: [orgId], references: [id], onDelete: Cascade)
  orgId       String
  kind        String
  payloadHash String
  createdAt   DateTime @default(now())
  deletedAt   DateTime?
}

model AuditEvent {
  id        String   @id @default(cuid())
  org       Org      @relation(fields: [orgId], references: [id], onDelete: Cascade)
  orgId     String
  action    String
  actor     String
  payload   Json
  createdAt DateTime @default(now())
}
