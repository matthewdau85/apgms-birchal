generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Org {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  users     User[]
  lines     BankLine[]
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  org       Org      @relation(fields: [orgId], references: [id], onDelete: Cascade)
  orgId     String
}

model BankLine {
  id        String   @id @default(cuid())
  org       Org      @relation(fields: [orgId], references: [id], onDelete: Cascade)
  orgId     String
  date      DateTime
  amount    Decimal
  payee     String
  desc      String
  createdAt DateTime @default(now())
  ledgerEntries LedgerEntry[]
}

model LedgerEntry {
  id          String    @id @default(cuid())
  bankLine    BankLine  @relation(fields: [bankLineId], references: [id], onDelete: Cascade)
  bankLineId  String
  allocations Json
  policyHash  String
  explain     Json
  createdAt   DateTime  @default(now())
  rptToken    RptToken?
}

model RptToken {
  id           String       @id @default(cuid())
  ledgerEntry  LedgerEntry  @relation(fields: [ledgerEntryId], references: [id], onDelete: Cascade)
  ledgerEntryId String      @unique
  payload      Json
  hash         String
  signature    String
  publicKey    String
  prevHash     String?
  createdAt    DateTime     @default(now())
}