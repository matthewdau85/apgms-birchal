generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Org {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  users     User[]
  lines     BankLine[]
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  org       Org      @relation(fields: [orgId], references: [id], onDelete: Cascade)
  orgId     String
}

model BankLine {
  id        String   @id @default(cuid())
  org       Org      @relation(fields: [orgId], references: [id], onDelete: Cascade)
  orgId     String
  date      DateTime
  amount    Decimal
  payee     String
  desc      String
  category  String?
  createdAt DateTime @default(now())
}

model Alert {
  id             String      @id @default(cuid())
  org            Org         @relation(fields: [orgId], references: [id], onDelete: Cascade)
  orgId          String
  ruleId         String
  status         AlertStatus @default(OPEN)
  severity       AlertSeverity
  summary        String
  detectedAt     DateTime    @default(now())
  transactionRef String?
  context        Json
  counterExample Json
  acknowledgedAt DateTime?
  escalatedAt    DateTime?
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

enum AlertStatus {
  OPEN
  ACKNOWLEDGED
  ESCALATED
}

enum AlertSeverity {
  LOW
  MEDIUM
  HIGH
}