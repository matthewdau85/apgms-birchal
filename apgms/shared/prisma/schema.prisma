generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Org {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  users     User[]
  lines     BankLine[]
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  org       Org      @relation(fields: [orgId], references: [id], onDelete: Cascade)
  orgId     String
}

model BankLine {
  id        String   @id @default(cuid())
  org       Org      @relation(fields: [orgId], references: [id], onDelete: Cascade)
  orgId     String
  date      DateTime
  amount    Decimal
  payee     String
  desc      String
  createdAt DateTime @default(now())
}

model Policy {
  id            String       @id @default(cuid())
  org           Org          @relation(fields: [orgId], references: [id], onDelete: Cascade)
  orgId         String
  name          String
  status        PolicyStatus
  premium       Decimal
  effectiveDate DateTime
  createdAt     DateTime     @default(now())
}

model AuditLog {
  id        String   @id @default(cuid())
  org       Org      @relation(fields: [orgId], references: [id], onDelete: Cascade)
  orgId     String
  actor     String
  action    String
  createdAt DateTime @default(now())
  details   Json?
}

model Allocation {
  id         String   @id @default(cuid())
  org        Org      @relation(fields: [orgId], references: [id], onDelete: Cascade)
  orgId      String
  portfolio  String
  amount     Decimal
  currency   String   @default("AUD")
  updatedAt  DateTime @default(now())
  createdAt  DateTime @default(now())
}

enum PolicyStatus {
  ACTIVE
  LAPSED
  PENDING
}