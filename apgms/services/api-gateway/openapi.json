{
  "openapi": "3.1.0",
  "info": {
    "title": "API Gateway",
    "version": "1.0.0"
  },
  "paths": {
    "/dashboard": {
      "get": {
        "summary": "Retrieve dashboard metrics",
        "responses": {
          "200": {
            "description": "Dashboard snapshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboard"
                }
              }
            }
          }
        }
      }
    },
    "/bank-lines": {
      "get": {
        "summary": "List bank lines",
        "parameters": [
          {
            "name": "take",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 20
            },
            "description": "Number of records to return (default 20, max 200)."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Pagination cursor from the previous page."
          }
        ],
        "responses": {
          "200": {
            "description": "Bank lines page",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankLineList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a bank line",
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "required": true,
            "description": "Unique key to ensure the mutation executes only once.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankLineCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Bank line created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankLine"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/audit/rpt/{id}": {
      "get": {
        "summary": "Retrieve an audit report for an organisation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Organisation identifier."
          }
        ],
        "responses": {
          "200": {
            "description": "Audit report",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditReport"
                }
              }
            }
          },
          "404": {
            "description": "Report not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/audit/ledger": {
      "get": {
        "summary": "List ledger entries",
        "parameters": [
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Optional organisation identifier to filter entries."
          }
        ],
        "responses": {
          "200": {
            "description": "Ledger entries",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLedger"
                }
              }
            }
          }
        }
      }
    },
    "/allocations/preview": {
      "post": {
        "summary": "Preview allocation results",
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique key to ensure the mutation executes only once."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllocationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Allocation preview",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllocationPreview"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/allocations/apply": {
      "post": {
        "summary": "Apply allocations",
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique key to ensure the mutation executes only once."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllocationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Allocation applied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllocationApply"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/policies": {
      "get": {
        "summary": "List policies",
        "responses": {
          "200": {
            "description": "Policy collection",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyList"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a policy",
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique key to ensure the mutation executes only once."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Policy created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Policy"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Dashboard": {
        "type": "object",
        "properties": {
          "summary": {
            "type": "object",
            "properties": {
              "totalOrgs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 9007199254740991
              },
              "totalUsers": {
                "type": "integer",
                "minimum": 0,
                "maximum": 9007199254740991
              },
              "totalBankLines": {
                "type": "integer",
                "minimum": 0,
                "maximum": 9007199254740991
              },
              "totalPolicies": {
                "type": "integer",
                "minimum": 0,
                "maximum": 9007199254740991
              }
            },
            "required": [
              "totalOrgs",
              "totalUsers",
              "totalBankLines",
              "totalPolicies"
            ]
          },
          "recentActivity": {
            "type": "object",
            "properties": {
              "bankLines": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "orgId": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "payee": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "orgId",
                    "date",
                    "amount",
                    "payee",
                    "description"
                  ]
                }
              }
            },
            "required": [
              "bankLines"
            ]
          }
        },
        "required": [
          "summary",
          "recentActivity"
        ]
      },
      "BankLine": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "payee": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "orgId",
          "date",
          "amount",
          "payee",
          "description"
        ]
      },
      "BankLineCreate": {
        "type": "object",
        "properties": {
          "orgId": {
            "type": "string",
            "minLength": 1
          },
          "date": {
            "type": "string",
            "minLength": 1
          },
          "amount": {
            "type": "number"
          },
          "payee": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "orgId",
          "date",
          "amount",
          "payee",
          "description"
        ]
      },
      "BankLineList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "orgId": {
                  "type": "string"
                },
                "date": {
                  "type": "string"
                },
                "amount": {
                  "type": "number"
                },
                "payee": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "orgId",
                "date",
                "amount",
                "payee",
                "description"
              ]
            }
          },
          "nextCursor": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "items",
          "nextCursor"
        ]
      },
      "BankLineQuery": {
        "type": "object",
        "properties": {
          "take": {
            "type": "integer",
            "minimum": 1,
            "maximum": 200,
            "default": 20
          },
          "cursor": {
            "type": "string"
          }
        }
      },
      "AuditReport": {
        "type": "object",
        "properties": {
          "orgId": {
            "type": "string"
          },
          "totals": {
            "type": "object",
            "properties": {
              "transactions": {
                "type": "integer",
                "minimum": 0,
                "maximum": 9007199254740991
              },
              "inflow": {
                "type": "number"
              },
              "outflow": {
                "type": "number"
              },
              "net": {
                "type": "number"
              }
            },
            "required": [
              "transactions",
              "inflow",
              "outflow",
              "net"
            ]
          },
          "payees": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "transactions": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 9007199254740991
                },
                "total": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "transactions",
                "total"
              ]
            }
          }
        },
        "required": [
          "orgId",
          "totals",
          "payees"
        ]
      },
      "AuditLedger": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9007199254740991
          },
          "entries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "orgId": {
                  "type": "string"
                },
                "date": {
                  "type": "string"
                },
                "amount": {
                  "type": "number"
                },
                "payee": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "orgId",
                "date",
                "amount",
                "payee",
                "description"
              ]
            }
          }
        },
        "required": [
          "count",
          "entries"
        ]
      },
      "AuditLedgerQuery": {
        "type": "object",
        "properties": {
          "orgId": {
            "type": "string"
          }
        }
      },
      "AllocationRequest": {
        "type": "object",
        "properties": {
          "orgId": {
            "type": "string",
            "minLength": 1
          },
          "lines": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "lineId": {
                  "type": "string",
                  "minLength": 1
                },
                "amount": {
                  "type": "number",
                  "minimum": 0
                }
              },
              "required": [
                "lineId",
                "amount"
              ]
            }
          }
        },
        "required": [
          "orgId",
          "lines"
        ]
      },
      "AllocationPreview": {
        "type": "object",
        "properties": {
          "orgId": {
            "type": "string"
          },
          "totalAmount": {
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "lineId": {
                  "type": "string"
                },
                "allocations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "category": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "number"
                      },
                      "percentage": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "category",
                      "amount",
                      "percentage"
                    ]
                  }
                }
              },
              "required": [
                "lineId",
                "allocations"
              ]
            }
          }
        },
        "required": [
          "orgId",
          "totalAmount",
          "results"
        ]
      },
      "AllocationApply": {
        "type": "object",
        "properties": {
          "orgId": {
            "type": "string"
          },
          "totalAmount": {
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "lineId": {
                  "type": "string"
                },
                "allocations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "category": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "number"
                      },
                      "percentage": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "category",
                      "amount",
                      "percentage"
                    ]
                  }
                }
              },
              "required": [
                "lineId",
                "allocations"
              ]
            }
          },
          "committed": {
            "type": "boolean"
          }
        },
        "required": [
          "orgId",
          "totalAmount",
          "results",
          "committed"
        ]
      },
      "Policy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ]
          },
          "rules": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "status",
          "rules",
          "createdAt",
          "updatedAt"
        ]
      },
      "PolicyList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "active",
                    "inactive"
                  ]
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "createdAt": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name",
                "description",
                "status",
                "rules",
                "createdAt",
                "updatedAt"
              ]
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "PolicyCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "minLength": 1
          },
          "rules": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            }
          }
        },
        "required": [
          "name",
          "description",
          "rules"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "context": {
            "type": "string"
          }
        },
        "required": [
          "error"
        ]
      }
    }
  }
}