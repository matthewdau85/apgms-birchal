name: Release Compliance

on:
  release:
    types: [published]

jobs:
  publish:
    name: Publish compliance evidence
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    env:
      SECURITY_REPORT_DIR: security-reports
      VULNERABILITY_ALLOWLIST: apgms/security/vulnerability-allowlist.json
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install scanning toolchain
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sudo sh -s -- -b /usr/local/bin v1.15.0
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sudo sh -s -- -b /usr/local/bin v0.78.0
          curl -sSfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin v0.53.0
          sudo chmod +x /usr/local/bin/syft /usr/local/bin/grype /usr/local/bin/trivy
      - name: Generate CycloneDX SBOM
        run: |
          mkdir -p "$SECURITY_REPORT_DIR"
          syft dir:apgms -o cyclonedx-json > "$SECURITY_REPORT_DIR/sbom.cdx.json"
      - name: Run Trivy SCA scan
        run: |
          trivy fs apgms \
            --format json \
            --output "$SECURITY_REPORT_DIR/trivy-report.json" \
            --ignore-unfixed \
            --severity HIGH,CRITICAL \
            --timeout 10m \
            --skip-dirs apgms/node_modules
      - name: Run Grype against SBOM
        run: |
          grype sbom:"$SECURITY_REPORT_DIR/sbom.cdx.json" -o json > "$SECURITY_REPORT_DIR/grype-report.json"
      - name: Enforce allowlist and fail on high/critical
        run: |
          node apgms/scripts/security/enforce-scan-results.mjs
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.5.0
      - name: Sign dependency lockfile (keyless)
        env:
          COSIGN_EXPERIMENTAL: '1'
        run: |
          cosign sign-blob pnpm-lock.yaml \
            --yes \
            --output-signature "$SECURITY_REPORT_DIR/pnpm-lock.sig" \
            --output-certificate "$SECURITY_REPORT_DIR/pnpm-lock.pem"
      - name: Verify dependency lockfile signature
        env:
          COSIGN_EXPERIMENTAL: '1'
        run: |
          cosign verify-blob pnpm-lock.yaml \
            --signature "$SECURITY_REPORT_DIR/pnpm-lock.sig" \
            --certificate "$SECURITY_REPORT_DIR/pnpm-lock.pem" \
            --certificate-identity "${{ github.actor }}@users.noreply.github.com" \
            --certificate-oidc-issuer https://token.actions.githubusercontent.com
      - name: Upload compliance artifact bundle
        uses: actions/upload-artifact@v4
        with:
          name: release-compliance
          path: |
            ${{ env.SECURITY_REPORT_DIR }}/sbom.cdx.json
            ${{ env.SECURITY_REPORT_DIR }}/trivy-report.json
            ${{ env.SECURITY_REPORT_DIR }}/grype-report.json
            ${{ env.SECURITY_REPORT_DIR }}/scan-summary.md
            ${{ env.SECURITY_REPORT_DIR }}/pnpm-lock.sig
            ${{ env.SECURITY_REPORT_DIR }}/pnpm-lock.pem
      - name: Attach artifacts to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.SECURITY_REPORT_DIR }}/sbom.cdx.json
            ${{ env.SECURITY_REPORT_DIR }}/trivy-report.json
            ${{ env.SECURITY_REPORT_DIR }}/grype-report.json
            ${{ env.SECURITY_REPORT_DIR }}/scan-summary.md
            ${{ env.SECURITY_REPORT_DIR }}/pnpm-lock.sig
            ${{ env.SECURITY_REPORT_DIR }}/pnpm-lock.pem
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
