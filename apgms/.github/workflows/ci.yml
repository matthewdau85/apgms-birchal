name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  PNPM_VERSION: '9'
  NODE_VERSION: '18'

jobs:
  contracts:
    name: Contracts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run contracts suite
        run: pnpm run contracts
      - name: Upload contracts artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: contracts-artifacts
          path: |
            artifacts/contracts
            reports/contracts
            coverage
          if-no-files-found: ignore

  red-team:
    name: Red Team
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run red team suite
        run: pnpm run red-team
      - name: Upload red team artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: red-team-artifacts
          path: |
            artifacts/red-team
            reports/red-team
            coverage
          if-no-files-found: ignore

  golden:
    name: Golden Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run golden tests
        run: pnpm run golden
      - name: Upload golden artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: golden-artifacts
          path: |
            artifacts/golden
            reports/golden
            coverage
          if-no-files-found: ignore

  unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run unit tests
        run: pnpm run unit
      - name: Upload unit test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-artifacts
          path: |
            artifacts/unit
            reports/unit
            coverage
          if-no-files-found: ignore

  e2e:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run end-to-end tests
        run: pnpm run e2e
      - name: Upload end-to-end artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-artifacts
          path: |
            artifacts/e2e
            reports/e2e
            playwright-report
          if-no-files-found: ignore

  sbom:
    name: SBOM Generation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Generate SBOM
        run: pnpm run sbom
      - name: Upload SBOM artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sbom-artifacts
          path: |
            sbom
            reports/sbom
          if-no-files-found: ignore

  docker-health:
    name: Docker Health Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run docker health checks
        run: pnpm run docker-health
      - name: Upload docker health artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-health-artifacts
          path: |
            artifacts/docker-health
            reports/docker-health
            logs/docker
          if-no-files-found: ignore
